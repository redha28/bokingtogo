// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/customers": {
            "get": {
                "description": "Get all customers with their family members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Get all customers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customerdto.CustomerListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new customer with family members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Create a new customer",
                "parameters": [
                    {
                        "description": "Customer data",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customerdto.CreateCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/customerdto.CustomerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/customers/{customer_id}/families": {
            "get": {
                "description": "Get all family members for a specific customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "families"
                ],
                "summary": "Get family members by customer ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "customer_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/familydto.FamilyListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/customers/{id}": {
            "get": {
                "description": "Get a customer by ID with family members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Get customer by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customerdto.CustomerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update a customer by ID with family members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Update customer by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Customer data",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customerdto.CreateCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customerdto.CustomerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a customer by ID and all family members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Delete customer by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/families": {
            "post": {
                "description": "Create a new family member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "families"
                ],
                "summary": "Create a new family member",
                "parameters": [
                    {
                        "description": "Family data",
                        "name": "family",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/familydto.CreateFamilyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/familydto.FamilyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/families/{id}": {
            "get": {
                "description": "Get a family member by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "families"
                ],
                "summary": "Get family member by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Family ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/familydto.FamilyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update a family member by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "families"
                ],
                "summary": "Update family member by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Family ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Family data",
                        "name": "family",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/familydto.UpdateFamilyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/familydto.FamilyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a family member by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "families"
                ],
                "summary": "Delete family member by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Family ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/nationalities": {
            "get": {
                "description": "Get all nationalities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nationalities"
                ],
                "summary": "Get all nationalities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/nationalitydto.NationalityListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new nationality",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nationalities"
                ],
                "summary": "Create a new nationality",
                "parameters": [
                    {
                        "description": "Nationality data",
                        "name": "nationality",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/nationalitydto.CreateNationalityRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/nationalitydto.NationalityResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/nationalities/{id}": {
            "get": {
                "description": "Get a nationality by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nationalities"
                ],
                "summary": "Get nationality by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Nationality ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/nationalitydto.NationalityResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update a nationality by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nationalities"
                ],
                "summary": "Update nationality by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Nationality ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Nationality data",
                        "name": "nationality",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/nationalitydto.UpdateNationalityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/nationalitydto.NationalityResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a nationality by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nationalities"
                ],
                "summary": "Delete nationality by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Nationality ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "customerdto.CreateCustomerRequest": {
            "type": "object",
            "required": [
                "cst_dob",
                "cst_email",
                "cst_name",
                "cst_phoneNum",
                "nationality_id"
            ],
            "properties": {
                "cst_dob": {
                    "type": "string"
                },
                "cst_email": {
                    "type": "string"
                },
                "cst_name": {
                    "type": "string"
                },
                "cst_phoneNum": {
                    "type": "string"
                },
                "family_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/customerdto.FamilyRequest"
                    }
                },
                "nationality_id": {
                    "type": "integer"
                }
            }
        },
        "customerdto.CustomerData": {
            "type": "object",
            "properties": {
                "cst_dob": {
                    "type": "string"
                },
                "cst_email": {
                    "type": "string"
                },
                "cst_id": {
                    "type": "integer"
                },
                "cst_name": {
                    "type": "string"
                },
                "cst_phoneNum": {
                    "type": "string"
                },
                "family_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/customerdto.FamilyResponse"
                    }
                },
                "nationality_id": {
                    "type": "integer"
                }
            }
        },
        "customerdto.CustomerListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/customerdto.CustomerData"
                    }
                }
            }
        },
        "customerdto.CustomerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/customerdto.CustomerData"
                }
            }
        },
        "customerdto.FamilyRequest": {
            "type": "object",
            "required": [
                "fl_dob",
                "fl_name",
                "fl_relation"
            ],
            "properties": {
                "fl_dob": {
                    "type": "string"
                },
                "fl_name": {
                    "type": "string"
                },
                "fl_relation": {
                    "type": "string"
                }
            }
        },
        "customerdto.FamilyResponse": {
            "type": "object",
            "properties": {
                "fl_dob": {
                    "type": "string"
                },
                "fl_name": {
                    "type": "string"
                },
                "fl_relation": {
                    "type": "string"
                }
            }
        },
        "familydto.CreateFamilyRequest": {
            "type": "object",
            "required": [
                "cst_id",
                "fl_dob",
                "fl_name",
                "fl_relation"
            ],
            "properties": {
                "cst_id": {
                    "type": "integer"
                },
                "fl_dob": {
                    "type": "string"
                },
                "fl_name": {
                    "type": "string"
                },
                "fl_relation": {
                    "type": "string"
                }
            }
        },
        "familydto.FamilyData": {
            "type": "object",
            "properties": {
                "cst_id": {
                    "type": "integer"
                },
                "fl_dob": {
                    "type": "string"
                },
                "fl_id": {
                    "type": "integer"
                },
                "fl_name": {
                    "type": "string"
                },
                "fl_relation": {
                    "type": "string"
                }
            }
        },
        "familydto.FamilyListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/familydto.FamilyData"
                    }
                }
            }
        },
        "familydto.FamilyResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/familydto.FamilyData"
                }
            }
        },
        "familydto.UpdateFamilyRequest": {
            "type": "object",
            "required": [
                "fl_dob",
                "fl_name",
                "fl_relation"
            ],
            "properties": {
                "fl_dob": {
                    "type": "string"
                },
                "fl_name": {
                    "type": "string"
                },
                "fl_relation": {
                    "type": "string"
                }
            }
        },
        "nationalitydto.CreateNationalityRequest": {
            "type": "object",
            "required": [
                "nationality_code",
                "nationality_name"
            ],
            "properties": {
                "nationality_code": {
                    "type": "string"
                },
                "nationality_name": {
                    "type": "string"
                }
            }
        },
        "nationalitydto.NationalityData": {
            "type": "object",
            "properties": {
                "nationality_code": {
                    "type": "string"
                },
                "nationality_id": {
                    "type": "integer"
                },
                "nationality_name": {
                    "type": "string"
                }
            }
        },
        "nationalitydto.NationalityListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/nationalitydto.NationalityData"
                    }
                }
            }
        },
        "nationalitydto.NationalityResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/nationalitydto.NationalityData"
                }
            }
        },
        "nationalitydto.UpdateNationalityRequest": {
            "type": "object",
            "required": [
                "nationality_code",
                "nationality_name"
            ],
            "properties": {
                "nationality_code": {
                    "type": "string"
                },
                "nationality_name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Customer Family API",
	Description:      "This is a sample API for managing customers and their family members.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
